
class VARS(object):
	
	def format_list(list_input):
		string_list = ""
		for s in list_input:
			string_list +=str(s)+'_'
		return string_list



	''' Variables '''
	ACTIVITY_NAMES_CONVERTION = {1:'WALKING',2:'RUNNING', 3:'STAIRS (UP)', 4:'STAIRS (DOWN)', 5:'STANDING', 6:'SITTING', 7:'LYING', 8:'BENDING', 9:'CYCLING (SITTING)', 10:'CYCLING (STANDING)'}
	REMOVE_ACTIVITIES =  [0,3,9,11,16,12,15,17]
	CONVERTION = {1:1, 2:2, 4:3, 5:4, 6:5, 7:6, 8:7, 10:8, 11:8, 13:9, 14:10}
	ACTIVITIES = [0,1,2,3,4,5,6,7,8,9]


	TESTING_OVERLAP = None
	TRAINING_OVERLAP = 20
	WINDOW_LENGTH = 100

	TRAINING_PATH = "DATA/TRAINING"
	TESTING_PATH = 'DATA/TESTING'

	SENSOR_1 = 'BACK'
	SENSOR_2 = 'THIGH'
	SENSORS = [SENSOR_1, SENSOR_2]
	LABEL = 'LAB'
	WINDOW_NAME_SENSOR = 'SENSORS'
	WINDOW_NAME_LABEL = 'LABEL'
	NUMBER_OF_ACTIVITIES = 10




	''' CNN SPECIFIC'''

	CNN_INPUT_SIZE = 600
	CNN_OUTPUT_SIZE = 10
	CNN_NUMBER_OF_ITERATIONS = 20000
	CNN_BATCH_SIZE = 100
	CNN_FILTER_X = 30
	CNN_FILTER_Y = 1
	CNN_RESIZE_Y = 6
	CNN_RESIZE_X = 100
	CNN_WINDOW = CNN_INPUT_SIZE / 6

	CNN_KERNEL_LIST = [1, 20, 40]
	CNN_NUMBER_OF_KERNELS = len(CNN_KERNEL_LIST)-1
	CNN_CONNECTIONS_INN = CNN_RESIZE_Y * (CNN_RESIZE_X - (CNN_NUMBER_OF_KERNELS*CNN_FILTER_X) + CNN_NUMBER_OF_KERNELS) * CNN_KERNEL_LIST[-1]
	CNN_NEURAL_LIST = [CNN_CONNECTIONS_INN] + [1500] + [CNN_OUTPUT_SIZE]
	CNN_FILTER_TYPE = 'VALID'
	CNN_MODEL_NAME = str(CNN_INPUT_SIZE) + '_' + "conv_" + format_list(CNN_KERNEL_LIST[1:]) + "neural_" +  format_list(CNN_NEURAL_LIST[1:-1]) + CNN_FILTER_TYPE + '_' + str(CNN_NUMBER_OF_ITERATIONS)
	CNN_MODEL_PATH = 'MODELS/' + CNN_MODEL_NAME



	''' VITERBI '''
	VITERBI_BAUM_WELCH_ITERATIONS = 5
	VITERBI_PREDICTION_PATH_TRAINING = 'VITERBI/PREDICTION_TRAINING.csv'
	VITERBI_ACTUAL_PATH_TRAINING = 'VITERBI/ACTUAL_TRAINING.csv'
	VITERBI_PREDICTION_PATH_TESTING = 'VITERBI/PREDICTION_TESTING.csv'
	VITERBI_RESULT_TESTING = 'RESULTS/TESTING_RESULT.csv'

	PREDICTION_RESULT_TESTING = 'VITERBI/PREDICTION_RESULT_TESTING.csv'

	#VITERBI_STATES = ['WALKING','RUNNING','STAIRS (UP)','STAIRS (DOWN)','STANDING','SITTING','LYING','BENDING','CYCLING (SITTING)','CYCLING (STANDING)']
	VITERBI_STATES = [1,2,3,4,5,6,7,8,9,10]
	
	VITERBI_TRANSITION_DICTIONARY_PATH = 'VITERBI/TRANSITION_DICTIONARY'

	''' Visualization '''
	VISUALIZATION_CONVERTION = {1:8, 2:6, 3:5, 4:1, 5:3, 6:4, 7:9, 8:10, 9:8, 10:1}